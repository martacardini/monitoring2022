# project for the exam of Monitoring Ecosystems

library(ncdf4)
library(viridis)
library(RStoolbox)
library(ggplot2)
library(raster)
library(patchwork)

#library(ncdf4) # import the copernicus file (in nc)
#library(raster) # work with raster file (single layer data)
#library(viridis) # plot the color palette
#library(RStoolbox) # useful for remote sensing image processing (make classification)
#library(ggplot2) # create graphics - ggplot function
#library(grid.Extra) # for multiframe ggplot
#library(patchwork) # multiframe graphics
#library(rgdal) # to open shape file


setwd("C:/lab/exam")


#-------------------------------------------------------------------------------------------------------#
#--------------------------------------------SCE--------------------------------------------------------#
#-------------------------------------------------------------------------------------------------------#

# let's import all the files about the Snow Cover Extent (SCE) from the copernicus satellite

# to import the files all together
sce <- list.files(pattern="SCE")

# apply raster function to all the files 
snowraster <- lapply(sce, raster)

# make a stack
snowcover <- stack(snowraster)

plot(snowcover)
cl <- colorRampPalette(c("blue","light blue","pink","red"))(100)
names(snowcover) <- c("jan_18", "jan_19", "jan_20", "jan_21")
plot(snowcover, col = cl)

# plot(snowcover, col= cl, main= "Snow Covers during years 2018-2021", names.attr= c("Jan 2018", "Jan 2019", "Jan 2020", "Jan 2021"))

# crop the map to Northern Italy extent
ext <- c(5, 17, 42, 48)
cropped_snow <- crop(snowcover, ext)
plot(cropped_snow, col=cl)

#ggplot

jan2018 <- cropped_snow$jan_18
jan2019 <- cropped_snow$jan_19
jan2020 <- cropped_snow$jan_20
jan2021 <- cropped_snow$jan_21

p1 <- ggplot() + geom_raster( data= jan2018, mapping = aes(x=x, y=y, fill= jan_18)) + scale_fill_viridis(option = "mako") + ggtitle("2018")
p2 <- ggplot() + geom_raster( data= jan2019, mapping = aes(x=x, y=y, fill= jan_19)) + scale_fill_viridis(option = "mako") + ggtitle("2019")
p3 <- ggplot() + geom_raster( data= jan2020, mapping = aes(x=x, y=y, fill= jan_20)) + scale_fill_viridis(option = "mako") + ggtitle("2020")
p4 <- ggplot() + geom_raster( data= jan2021, mapping = aes(x=x, y=y, fill= jan_21)) + scale_fill_viridis(option = "mako") + ggtitle("2021")

p1 + p2 + p3 + p4

#-------------------------------------------------------------------------------------------------------#
#--------------------------------------------LST--------------------------------------------------------#
#-------------------------------------------------------------------------------------------------------#

# let's import all the files about the Land Surface Temperature (LST) from the copernicus satellite
lst <- list.files(pattern="LST")
traster <- lapply(lst, raster)
temp <- stack (traster)
names(temp) <- c("jan_18", "jan_19", "jan_20", "jan_21")

clt <- colorRampPalette(c("yellow","pink","red","dark red"))(100)
plot (temp, col=clt)

# crop the images

temp_crop <- crop(temp, ext)
plot(temp_crop, col=clt)




#-------------------------------------------------------------------------------------------------------#
#-----------------------------------snow cover using modis data-----------------------------------------#
#-------------------------------------------------------------------------------------------------------#

modis_snow <- list.files(pattern = "RenderData")
snow_brick <- lapply(modis_snow, brick)
snow_brick
names(snow_brick) <- c("feb01", "feb21", "aug01", "aug21")

par(mfrow = c(2, 2))
p1 <- ggRGB(snow_brick$aug01, r=1, g=2, b=3, stretch="lin")
p2 <- ggRGB(snow_brick$feb01, r=1, g=2, b=3, stretch="lin")
p3 <- ggRGB(snow_brick$aug21, r=1, g=2, b=3, stretch="lin")
p4 <- ggRGB(snow_brick$feb21, r=1, g=2, b=3, stretch="lin")

p1 + p2 + p3 + p4




#-------------------------------------------------------------------------------------------------------#
#-----------------------------------___-----------------------------------------#
#-------------------------------------------------------------------------------------------------------#
#make histograms to analyse frequency distribution of temperature classes
# make scatterplot + abline
